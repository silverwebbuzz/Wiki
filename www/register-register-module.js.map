{"version":3,"sources":["webpack:///./src/app/register/register.module.ts","webpack:///./src/app/register/register.page.html","webpack:///./src/app/register/register.page.scss","webpack:///./src/app/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"back()\\\">\\r\\n        <ion-icon name=\\\"arrow-back\\\" mode=\\\"ios\\\" color=\\\"dark\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Create an Account\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"main-page\\\">\\r\\n\\r\\n  <div class=\\\"grey-background\\\"></div>\\r\\n\\r\\n  <div class=\\\"container spc\\\">\\r\\n\\r\\n  <ion-card class=\\\"box\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"registration_form\\\" autocomplete=\\\"off\\\">\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-container\\\">\\r\\n        <ion-label>User Type</ion-label>\\r\\n        <ion-select formControlName=\\\"usertype\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\">\\r\\n            <ion-select-option *ngFor=\\\"let ut of UserTypes; let i=index;\\\" [value]=\\\"ut.id\\\">{{ut.name | titlecase}}</ion-select-option>\\r\\n          </ion-select>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-container\\\">\\r\\n      <ion-label position=\\\"floating\\\" class=\\\"input-label\\\">\\r\\n        First Name\\r\\n      </ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"firstname\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.firstname.hasError('required') && registration_form.controls.firstname.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter First Name!</p>\\r\\n    </ion-item>\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-container\\\">\\r\\n      <ion-label position=\\\"floating\\\" class=\\\"input-label\\\">\\r\\n        Last Name\\r\\n      </ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.lastname.hasError('required') && registration_form.controls.lastname.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Last Name!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-container\\\">\\r\\n      <ion-label position=\\\"floating\\\" class=\\\"input-label\\\">\\r\\n        Email\\r\\n      </ion-label>\\r\\n      <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.email.hasError('required') && registration_form.controls.email.touched\\\">\\r\\n      <p class=\\\"content\\\">Email Address is required!</p>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.email.hasError('pattern') && registration_form.controls.email.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter a Valid Email Address!</p>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.email.hasError('incorrect') && registration_form.controls.email.touched\\\">\\r\\n      <p class=\\\"content\\\">Email Address is already taken!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-container\\\">\\r\\n      <ion-label position=\\\"floating\\\" class=\\\"input-label\\\">\\r\\n        Username\\r\\n      </ion-label>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.username.hasError('required') && registration_form.controls.username.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter Userame!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.username.hasError('incorrect') && registration_form.controls.username.touched\\\">\\r\\n      <p class=\\\"content\\\">Username is already taken!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-container\\\">\\r\\n      <ion-label position=\\\"floating\\\" class=\\\"input-label\\\">\\r\\n        Password\\r\\n      </ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.password.hasError('required') && registration_form.controls.password.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter a Password!</p>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.password.hasError('minlength') && registration_form.controls.password.touched\\\">\\r\\n      <p class=\\\"content\\\">The password needs at least 8 characters.</p>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.password.hasError('pattern') && registration_form.controls.password.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter One Upper Case and One Lower Case, One Spacial Characters and One Number</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item lines=\\\"none\\\" class=\\\"input-container\\\">\\r\\n      <ion-label position=\\\"floating\\\" class=\\\"input-label\\\">\\r\\n        Confirm Password\\r\\n      </ion-label>\\r\\n      <ion-input type=\\\"password\\\" formControlName=\\\"confirmpassword\\\" class=\\\"input-box\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.controls.confirmpassword.hasError('required') && registration_form.controls.confirmpassword.touched\\\">\\r\\n      <p class=\\\"content\\\">Please Enter a Confirm Password!</p>\\r\\n    </ion-item>\\r\\n    <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"registration_form.get('confirmpassword').errors && registration_form.get('confirmpassword').errors.confirmpassword\\\">\\r\\n      <p class=\\\"content\\\">Passwords must match!</p>\\r\\n    </ion-item>\\r\\n\\r\\n    <ion-button expand=\\\"full\\\" size=\\\"large\\\" color=\\\"dark\\\" class=\\\"btn-login\\\" (click)=\\\"submitRegister()\\\">CREATE AN ACCOUNT</ion-button>\\r\\n    </form>\\r\\n\\r\\n    </ion-card>\\r\\n\\r\\n    <ion-button fill=\\\"clear\\\" size=\\\"large\\\" expand=\\\"full\\\" class=\\\"btn-clear\\\" routerLink=\\\"/login\\\">Already have an account? &nbsp;\\r\\n      <ion-text color=\\\"dark\\\" style=\\\"font-weight: bold;\\\">SIGN IN</ion-text>\\r\\n    </ion-button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</ion-content>\\r\\n\"","module.exports = \".spc {\\n  height: calc(100vh - 100px); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvQzpcXGlvbmljIHByb2plY3RcXHdpa2kvc3JjXFxhcHBcXHJlZ2lzdGVyXFxyZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwyQkFBMkIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zcGN7XHJcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSAxMDBweCk7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ConfirmPasswordValidator } from '../_helper/must-match.validator';\r\nimport { ApiService } from '../services/api.service';\r\nimport { CommonService } from '../services/common.service';\r\nimport { Constants } from '../interface/constants.models';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.page.html',\r\n  styleUrls: ['./register.page.scss'],\r\n})\r\nexport class RegisterPage implements OnInit {\r\n\r\n  registration_form: FormGroup;\r\n  UserTypes = [];\r\n  constructor(private navCtrl: NavController,\r\n    private statusBar: StatusBar,\r\n    private service:ApiService,\r\n    private auth: AuthenticationService,\r\n    private common:CommonService,\r\n    private router:Router,\r\n    private formBuilder: FormBuilder) {\r\n      this.UserTypes = JSON.parse(window.localStorage.getItem(Constants.USER_TYPES));\r\n      this.registration_fb();\r\n     }\r\n\r\n     registration_fb() {\r\n      this.registration_form = this.formBuilder.group({\r\n        usertype: [this.UserTypes[0].id],\r\n        username: [null, Validators.required],\r\n        firstname: [null, Validators.required],\r\n        lastname: [null, Validators.required],\r\n        email: [null, Validators.compose([\r\n          Validators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})'),\r\n          Validators.required\r\n        ])],\r\n        password: [null, Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(8)\r\n        ])],\r\n        confirmpassword: [null, Validators.required]\r\n      },{validator: ConfirmPasswordValidator.MatchPassword});\r\n    };\r\n\r\n    submitRegister(){\r\n      console.log('type:', this.registration_form.value.usertype);\r\n      for (let v in this.registration_form.controls) {\r\n        this.registration_form.controls[v].markAsTouched();\r\n      }\r\n      if (this.registration_form.valid) {\r\n        this.common.presentLoading();\r\n        const body = {\r\n            \"username\" : this.registration_form.value.username,\r\n            \"firstname\" : this.registration_form.value.firstname,\r\n            \"lastname\" : this.registration_form.value.lastname,\r\n            \"email\" : this.registration_form.value.email,\r\n            \"password\" : this.registration_form.value.password,\r\n            \"usertype\" : this.registration_form.value.usertype,\r\n            \"newslatter_subscribe\" : \"1\"\r\n        };\r\n\r\n        this.service.RegistrationUser(body).subscribe(val=>{\r\n          if(this.common.isLoading){\r\n            this.common.dismissLoading();\r\n          }\r\n          if(val.status){\r\n            window.localStorage.setItem(Constants.USER_DETAILS, JSON.stringify(val.user_data));\r\n            this.common.presentToastWithOptions(val.message);\r\n          \r\n            this.router.navigate(['/home']);\r\n          }else{\r\n            if(val.fieldname == \"username\"){\r\n              this.registration_form.controls['username'].setErrors({'incorrect': true});\r\n              this.registration_form.controls['username'].markAsTouched();\r\n            }else if(val.fieldname == \"email\"){\r\n              this.registration_form.controls['email'].setErrors({'incorrect': true});\r\n              this.registration_form.controls['email'].markAsTouched();\r\n            }else{\r\n              this.registration_form.controls['username'].setErrors({'incorrect': true});\r\n              this.registration_form.controls['username'].markAsTouched();\r\n              this.registration_form.controls['email'].setErrors({'incorrect': true});\r\n              this.registration_form.controls['email'].markAsTouched();\r\n            }\r\n            this.common.presentToastWithOptions(val.message);\r\n          }\r\n        },(err)=>{\r\n          if(this.common.isLoading){\r\n            this.common.dismissLoading();\r\n          }\r\n          console.log('Registration Err:', err);\r\n          this.common.presentToastWithOptions('Server Problem, Please try again.');\r\n        });\r\n      }\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.statusBar.styleDefault();\r\n    this.statusBar.backgroundColorByHexString('#f1f1f1');\r\n  }\r\n\r\n  back(){\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}