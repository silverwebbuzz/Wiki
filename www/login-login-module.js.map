{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"back()\\\">\\r\\n        <ion-icon name=\\\"arrow-back\\\" mode=\\\"ios\\\" color=\\\"dark\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Sign In\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n  \\r\\n\\r\\n<ion-content class=\\\"main-page\\\">\\r\\n\\r\\n    <div class=\\\"grey-background\\\"></div>\\r\\n\\r\\n  <div class=\\\"container\\\">\\r\\n\\r\\n  <ion-card class=\\\"box\\\">\\r\\n\\r\\n    <img src=\\\"../../assets/img/w.png\\\" class=\\\"logo\\\"/>\\r\\n\\r\\n  <form [formGroup]=\\\"login_form\\\" autocomplete=\\\"off\\\">\\r\\n  <ion-item lines=\\\"none\\\" class=\\\"input-container\\\">\\r\\n    <ion-label position=\\\"floating\\\" class=\\\"input-label\\\">\\r\\n      Username\\r\\n    </ion-label>\\r\\n    <ion-input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"input-box\\\"></ion-input>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n    *ngIf=\\\"login_form.controls.username.hasError('required') && login_form.controls.username.touched\\\">\\r\\n    <p class=\\\"content\\\">Username or Email is required!</p>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"login_form.controls.username.hasError('incorrect') && login_form.controls.username.touched\\\">\\r\\n      <p class=\\\"content\\\">Username or email does not exists.</p>\\r\\n    </ion-item>\\r\\n\\r\\n  <ion-item lines=\\\"none\\\" class=\\\"input-container\\\">\\r\\n    <ion-label position=\\\"floating\\\" class=\\\"input-label\\\">\\r\\n      Password\\r\\n    </ion-label>\\r\\n    <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"input-box\\\"></ion-input>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n    *ngIf=\\\"login_form.controls.password.hasError('required') && login_form.controls.password.touched\\\">\\r\\n    <p class=\\\"content\\\">Password is required!</p>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item no-padding lines=\\\"none\\\" class=\\\"validator-error\\\"\\r\\n      *ngIf=\\\"login_form.controls.password.hasError('incorrect') && login_form.controls.password.touched\\\">\\r\\n      <p class=\\\"content\\\">Invalid password.</p>\\r\\n    </ion-item>\\r\\n    \\r\\n  <ion-button fill=\\\"clear\\\" size=\\\"small\\\" expand=\\\"full\\\" class=\\\"btn-forgot\\\" routerLink=\\\"/forgotpass\\\">Forgot Password ?</ion-button>\\r\\n\\r\\n  <ion-button expand=\\\"full\\\" size=\\\"large\\\" color=\\\"dark\\\" class=\\\"btn-login\\\" (click)=\\\"doLogin()\\\">SIGN IN</ion-button>\\r\\n\\r\\n  </form>\\r\\n\\r\\n  </ion-card>\\r\\n\\r\\n  <ion-button fill=\\\"clear\\\" size=\\\"large\\\" expand=\\\"full\\\" class=\\\"btn-signup\\\" routerLink=\\\"/register\\\">CREATE AN ACCOUNT</ion-button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CommonService } from '../services/common.service';\r\nimport { ApiService } from '../services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { Constants } from '../interface/constants.models';\r\nimport { AuthGuard } from '../guard/auth.guard';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  login_form: FormGroup;\r\n\r\n  constructor(private navCtrl: NavController,\r\n    private statusBar: StatusBar,\r\n    private common: CommonService,\r\n    private service: ApiService,\r\n    private router:Router,\r\n    private guard:AuthGuard,\r\n    private formBuilder: FormBuilder) { \r\n\r\n      this.login_fb();\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  login_fb(){\r\n    this.login_form = this.formBuilder.group({\r\n      username: [null, Validators.required],\r\n      password: [null, Validators.required]\r\n    });\r\n  }\r\n  doLogin(){\r\n    for (let v in this.login_form.controls) {\r\n      this.login_form.controls[v].markAsTouched();\r\n    }\r\n    if (this.login_form.valid) {\r\n      this.common.presentLoading();\r\n      let body = {\r\n        \"username\": this.login_form.value.username,\r\n        \"password\": this.login_form.value.password\r\n      };\r\n      this.service.LoginUser(body).subscribe(val=>{\r\n        if(this.common.isLoading){\r\n          this.common.dismissLoading();\r\n        }\r\n        if(val.status){\r\n            window.localStorage.setItem(Constants.USER_DETAILS, JSON.stringify(val.user_detail));\r\n            this.common.presentToastWithOptions(\"Login Successfully.\");\r\n            this.router.navigate(['/home']);\r\n        }else{\r\n\r\n          if(val.field_name == \"username\"){\r\n            this.login_form.controls['username'].setErrors({'incorrect': true});\r\n            this.login_form.controls['username'].markAsTouched();\r\n          }else if(val.field_name == \"password\"){\r\n            this.login_form.controls['password'].setErrors({'incorrect': true});\r\n            this.login_form.controls['password'].markAsTouched();\r\n          }\r\n          this.common.presentToastWithOptions(val.message);\r\n        }\r\n      },err=>{\r\n        console.log('Login Err:', err);\r\n        if(this.common.isLoading){\r\n          this.common.dismissLoading();\r\n        }\r\n        this.common.presentToastWithOptions('Server Problem, Please try again.');\r\n      })\r\n    }\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.statusBar.styleDefault();\r\n    this.statusBar.backgroundColorByHexString('#f1f1f1');\r\n  }\r\n\r\n  back(){\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}